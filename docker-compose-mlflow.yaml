version: '3.8'
services:
  mlflow:
    image: 'ghcr.io/mlflow/mlflow:latest'
    depends_on:
      - postgres
      - minio
    command: "sh -c \"apt-get update && apt-get install -y curl && pip install psycopg2-binary && mlflow server --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB} --default-artifact-root s3://${MLFLOW_BUCKET}/ --host 0.0.0.0\"\n"
    environment:
      - 'AWS_ACCESS_KEY_ID=${MINIO_ROOT_USER}'
      - 'AWS_SECRET_ACCESS_KEY=${MINIO_ROOT_PASSWORD}'
      - 'MLFLOW_S3_ENDPOINT_URL=http://minio:9000'
      - 'MLFLOW_TRACKING_USERNAME=${MLFLOW_USER}'
      - 'MLFLOW_TRACKING_PASSWORD=${MLFLOW_PASSWORD}'
      - MLFLOW_SERVE_ARTIFACTS=true
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://localhost:5000/health'
      interval: 30s
      timeout: 10s
      retries: 3
  postgres:
    image: 'postgres:15-alpine'
    environment:
      - 'POSTGRES_USER=${POSTGRES_USER}'
      - 'POSTGRES_PASSWORD=${POSTGRES_PASSWORD}'
      - 'POSTGRES_DB=${POSTGRES_DB}'
    volumes:
      - 'postgres_data:/var/lib/postgresql/data'
    healthcheck:
      test:
        - CMD-SHELL
        - 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'
      interval: 10s
      timeout: 5s
      retries: 5
  minio:
    image: 'minio/minio:latest'
    command: 'server /data --console-address ":9001"'
    environment:
      - 'MINIO_ROOT_USER=${MINIO_ROOT_USER}'
      - 'MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}'
    volumes:
      - 'minio_data:/data'
    healthcheck:
      test:
        - CMD
        - curl
        - '-f'
        - 'http://localhost:9000/minio/health/live'
      interval: 30s
      timeout: 20s
      retries: 3
volumes:
  postgres_data: null
  minio_data: null
